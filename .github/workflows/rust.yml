name: Rust

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - uses: actions/upload-artifact@v2
      with:
        name: target
        path: target

  build-wasm:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: wasm32-wasi
    - name: Build
      run: cargo build --verbose --target wasm32-wasi
    - uses: actions/upload-artifact@v2
      with:
        name: target-wasm
        path: target

  run:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: target
        path: target
    - name: Run
      run: ./target/debug/base64-cli encode hello

  run-wasm:
    needs: build-wasm
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: wasm32-wasi
    - uses: actions/download-artifact@v2
      with:
        name: target-wasm
        path: target
    - run: brew install wasmer
    - run: wasmer run target/wasm32-wasi/debug/base64-cli.wasm encode hello

  format:
    needs: [run, run-wasm]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: cargo fmt --all -- --check

  lint:
    needs: [run, run-wasm]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: target
        path: target
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --all-features -- -D clippy::all -D warnings

  test:
    needs: [format, lint]
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: target
        path: target
    - name: Run tests
      run: cargo test --verbose
